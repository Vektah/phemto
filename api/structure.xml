<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="Type.php" hash="10fb9bc2f530bc21703c1f16bc7e8db5" package="Default">
    <class final="false" abstract="false" namespace="phemto" line="10" package="phemto">
      <extends/>
      <name>Type</name>
      <full_name>\phemto\Type</full_name>
      <docblock line="5">
        <description>Used in calling setters for a class.</description>
        <long-description/>
        <tag line="5" name="package" description="phemto"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="12" namespace="phemto" package="Default">
        <name>$setters</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="14" package="phemto">
        <name>call</name>
        <full_name>call</full_name>
        <argument line="14">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Type.php</error>
      <error line="12" code="50018">No DocBlock was found for property $setters</error>
      <error line="14" code="50010">No DocBlock was found for method call()</error>
    </parse_markers>
  </file>
  <file path="Variable.php" hash="dd4b2a2033cd33bd1b7ffa234d3ca189" package="Default">
    <class final="false" abstract="false" namespace="phemto" line="11" package="phemto">
      <extends/>
      <name>Variable</name>
      <full_name>\phemto\Variable</full_name>
      <docblock line="6">
        <description>Represents a named variable.</description>
        <long-description>&lt;p&gt;Allows injecting dependencies by name&lt;/p&gt;</long-description>
        <tag line="6" name="package" description="phemto"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="16" namespace="phemto" package="Default">
        <name>$preference</name>
        <default/>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="" type="\phemto\lifecycle\Value">
            <type by_reference="false">\phemto\lifecycle\Value</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="phemto" package="Default">
        <name>$context</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="" type="\phemto\Context">
            <type by_reference="false">\phemto\Context</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="23" package="phemto">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="23">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="28" package="phemto">
        <name>willUse</name>
        <full_name>willUse</full_name>
        <argument line="28">
          <name>$preference</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="39" package="phemto">
        <name>useString</name>
        <full_name>useString</full_name>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="param" description="" type="\phemto\" variable="$string"/>
          <tag line="35" name="return" description="" type="\phemto\lifecycle\Value">
            <type by_reference="false">\phemto\lifecycle\Value</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Variable.php</error>
      <critical line="13" code="50019">No short description for property $preference</critical>
      <critical line="18" code="50019">No short description for property $context</critical>
      <error line="23" code="50010">No DocBlock was found for method __construct()</error>
      <error line="28" code="50010">No DocBlock was found for method willUse()</error>
      <error line="35" code="50012">No short description for method useString()</error>
    </parse_markers>
  </file>
  <file path="lifecycle/Reused.php" hash="e114cc658d0ff5590f5b5d96558ee15f" package="Default">
    <class final="false" abstract="false" namespace="phemto\lifecycle" line="9" package="phemto\lifecycle">
      <extends>\phemto\lifecycle\Lifecycle</extends>
      <name>Reused</name>
      <full_name>\phemto\lifecycle\Reused</full_name>
      <docblock line="4">
        <description>Factory + Singleton lifecycle provider.</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\lifecycle"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="11" namespace="phemto\lifecycle" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="13" package="phemto\lifecycle">
        <name>instantiate</name>
        <full_name>instantiate</full_name>
        <argument line="13">
          <name>$dependencies</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lifecycle/Reused.php</error>
      <error line="11" code="50018">No DocBlock was found for property $instance</error>
      <error line="13" code="50010">No DocBlock was found for method instantiate()</error>
    </parse_markers>
  </file>
  <file path="lifecycle/Value.php" hash="e2a0987fcb320ff56360eab8acf3ffd0" package="Default">
    <class final="false" abstract="false" namespace="phemto\lifecycle" line="9" package="phemto\lifecycle">
      <extends>\phemto\lifecycle\Lifecycle</extends>
      <name>Value</name>
      <full_name>\phemto\lifecycle\Value</full_name>
      <docblock line="4">
        <description>Always returns a set value.</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\lifecycle"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="11" namespace="phemto\lifecycle" package="Default">
        <name>$instance</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="13" package="phemto\lifecycle">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="13">
          <name>$instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="18" package="phemto\lifecycle">
        <name>instantiate</name>
        <full_name>instantiate</full_name>
        <argument line="18">
          <name>$dependencies</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lifecycle/Value.php</error>
      <error line="11" code="50018">No DocBlock was found for property $instance</error>
      <error line="13" code="50010">No DocBlock was found for method __construct()</error>
      <error line="18" code="50010">No DocBlock was found for method instantiate()</error>
    </parse_markers>
  </file>
  <file path="lifecycle/Lifecycle.php" hash="86dcaca665908d2d98225ea70a9c4501" package="Default">
    <class final="false" abstract="true" namespace="phemto\lifecycle" line="11" package="phemto\lifecycle">
      <extends/>
      <name>Lifecycle</name>
      <full_name>\phemto\lifecycle\Lifecycle</full_name>
      <docblock line="6">
        <description>Base lifecycle class, Invoked when a dependency is requested.</description>
        <long-description></long-description>
        <tag line="6" name="package" description="phemto\lifecycle"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="13" namespace="phemto\lifecycle" package="Default">
        <name>$class</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="15" package="phemto\lifecycle">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="15">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto\lifecycle" line="21" package="phemto\lifecycle">
        <name>triggerAutoload</name>
        <full_name>triggerAutoload</full_name>
        <argument line="21">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="28" package="phemto\lifecycle">
        <name>isOneOf</name>
        <full_name>isOneOf</full_name>
        <argument line="28">
          <name>$candidates</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="phemto\lifecycle" line="33" package="phemto\lifecycle">
        <name>instantiate</name>
        <full_name>instantiate</full_name>
        <argument line="33">
          <name>$dependencies</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lifecycle/Lifecycle.php</error>
      <error line="13" code="50018">No DocBlock was found for property $class</error>
      <error line="15" code="50010">No DocBlock was found for method __construct()</error>
      <error line="21" code="50010">No DocBlock was found for method triggerAutoload()</error>
      <error line="28" code="50010">No DocBlock was found for method isOneOf()</error>
      <error line="33" code="50010">No DocBlock was found for method instantiate()</error>
    </parse_markers>
  </file>
  <file path="lifecycle/Factory.php" hash="5ea18468667fd4989f941829b62ec1bd" package="Default">
    <class final="false" abstract="false" namespace="phemto\lifecycle" line="9" package="phemto\lifecycle">
      <extends>\phemto\lifecycle\Lifecycle</extends>
      <name>Factory</name>
      <full_name>\phemto\lifecycle\Factory</full_name>
      <docblock line="4">
        <description>Creates a new object each time its required.</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\lifecycle"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="11" package="phemto\lifecycle">
        <name>instantiate</name>
        <full_name>instantiate</full_name>
        <argument line="11">
          <name>$dependencies</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lifecycle/Factory.php</error>
      <error line="11" code="50010">No DocBlock was found for method instantiate()</error>
    </parse_markers>
  </file>
  <file path="lifecycle/Sessionable.php" hash="6a25983102e9a91615895346a1b92c7c" package="Default">
    <class final="false" abstract="false" namespace="phemto\lifecycle" line="12" package="phemto\lifecycle">
      <extends>\phemto\lifecycle\Lifecycle</extends>
      <name>Sessionable</name>
      <full_name>\phemto\lifecycle\Sessionable</full_name>
      <docblock line="7">
        <description>Factory cached in session</description>
        <long-description></long-description>
        <tag line="7" name="package" description="phemto\lifecycle"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="14" namespace="phemto\lifecycle" package="Default">
        <name>$slot</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="16" package="phemto\lifecycle">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="16">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="16">
          <name>$slot</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\lifecycle" line="22" package="phemto\lifecycle">
        <name>instantiate</name>
        <full_name>instantiate</full_name>
        <argument line="22">
          <name>$dependencies</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lifecycle/Sessionable.php</error>
      <error line="14" code="50018">No DocBlock was found for property $slot</error>
      <error line="16" code="50010">No DocBlock was found for method __construct()</error>
      <error line="22" code="50010">No DocBlock was found for method instantiate()</error>
    </parse_markers>
  </file>
  <file path="repository/ReflectionCache.php" hash="70fb0b054cbce86d6cbe60ec71c0e429" package="Default">
    <class final="false" abstract="false" namespace="phemto\repository" line="9" package="phemto\repository">
      <extends/>
      <name>ReflectionCache</name>
      <full_name>\phemto\repository\ReflectionCache</full_name>
      <docblock line="4">
        <description>Caches reflection queries.</description>
        <long-description/>
        <tag line="4" name="package" description="phemto\repository"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="11" namespace="phemto\repository" package="Default">
        <name>$implementations_of</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="12" namespace="phemto\repository" package="Default">
        <name>$interfaces_of</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="17" namespace="phemto\repository" package="Default">
        <name>$reflections</name>
        <default>array()</default>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="Cache of reflected classes." type="\ReflectionClass[]">
            <type by_reference="false">\ReflectionClass[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="18" namespace="phemto\repository" package="Default">
        <name>$subclasses</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="19" namespace="phemto\repository" package="Default">
        <name>$parents</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="21" package="phemto\repository">
        <name>refresh</name>
        <full_name>refresh</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="27" package="phemto\repository">
        <name>implementationsOf</name>
        <full_name>implementationsOf</full_name>
        <argument line="27">
          <name>$interface</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="33" package="phemto\repository">
        <name>interfacesOf</name>
        <full_name>interfacesOf</full_name>
        <argument line="33">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="39" package="phemto\repository">
        <name>concreteSubgraphOf</name>
        <full_name>concreteSubgraphOf</full_name>
        <argument line="39">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="56" package="phemto\repository">
        <name>parentsOf</name>
        <full_name>parentsOf</full_name>
        <argument line="56">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="65" package="phemto\repository">
        <name>reflection</name>
        <full_name>reflection</full_name>
        <argument line="65">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto\repository" line="74" package="phemto\repository">
        <name>isConcrete</name>
        <full_name>isConcrete</full_name>
        <argument line="74">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto\repository" line="79" package="phemto\repository">
        <name>indexed</name>
        <full_name>indexed</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto\repository" line="84" package="phemto\repository">
        <name>buildIndex</name>
        <full_name>buildIndex</full_name>
        <argument line="84">
          <name>$classes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto\repository" line="95" package="phemto\repository">
        <name>crossReference</name>
        <full_name>crossReference</full_name>
        <argument line="95">
          <name>$interface</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file repository/ReflectionCache.php</error>
      <error line="11" code="50018">No DocBlock was found for property $implementations_of</error>
      <error line="12" code="50018">No DocBlock was found for property $interfaces_of</error>
      <error line="18" code="50018">No DocBlock was found for property $subclasses</error>
      <error line="19" code="50018">No DocBlock was found for property $parents</error>
      <error line="21" code="50010">No DocBlock was found for method refresh()</error>
      <error line="27" code="50010">No DocBlock was found for method implementationsOf()</error>
      <error line="33" code="50010">No DocBlock was found for method interfacesOf()</error>
      <error line="39" code="50010">No DocBlock was found for method concreteSubgraphOf()</error>
      <error line="56" code="50010">No DocBlock was found for method parentsOf()</error>
      <error line="65" code="50010">No DocBlock was found for method reflection()</error>
      <error line="74" code="50010">No DocBlock was found for method isConcrete()</error>
      <error line="79" code="50010">No DocBlock was found for method indexed()</error>
      <error line="84" code="50010">No DocBlock was found for method buildIndex()</error>
      <error line="95" code="50010">No DocBlock was found for method crossReference()</error>
    </parse_markers>
  </file>
  <file path="repository/ClassRepository.php" hash="e1f11989b6aa72cb292aa59665813002" package="Default">
    <class final="false" abstract="false" namespace="phemto\repository" line="9" package="phemto\repository">
      <extends/>
      <name>ClassRepository</name>
      <full_name>\phemto\repository\ClassRepository</full_name>
      <docblock line="4">
        <description>The actual DI container</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\repository"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="14" namespace="phemto\repository" package="Default">
        <name>$reflection</name>
        <default>false</default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
          <tag line="11" name="var" description="" type="\phemto\repository\ReflectionCache">
            <type by_reference="false">\phemto\repository\ReflectionCache</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="16" package="phemto\repository">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="24" package="phemto\repository">
        <name>candidatesFor</name>
        <full_name>candidatesFor</full_name>
        <argument line="24">
          <name>$interface</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="32" package="phemto\repository">
        <name>isSupertype</name>
        <full_name>isSupertype</full_name>
        <argument line="32">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="32">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="43" package="phemto\repository">
        <name>getConstructorParameters</name>
        <full_name>getConstructorParameters</full_name>
        <argument line="43">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto\repository" line="53" package="phemto\repository">
        <name>getParameters</name>
        <full_name>getParameters</full_name>
        <argument line="53">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="53">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file repository/ClassRepository.php</error>
      <critical line="11" code="50019">No short description for property $reflection</critical>
      <error line="16" code="50010">No DocBlock was found for method __construct()</error>
      <error line="24" code="50010">No DocBlock was found for method candidatesFor()</error>
      <error line="32" code="50010">No DocBlock was found for method isSupertype()</error>
      <error line="43" code="50010">No DocBlock was found for method getConstructorParameters()</error>
      <error line="53" code="50010">No DocBlock was found for method getParameters()</error>
    </parse_markers>
  </file>
  <file path="Phemto.php" hash="a8af7d1ea96be34dd2635c9f0aba3bbd" package="Default">
    <class final="false" abstract="false" namespace="phemto" line="13" package="phemto">
      <extends/>
      <name>Phemto</name>
      <full_name>\phemto\Phemto</full_name>
      <docblock line="8">
        <description>Forward facing api / dependency container.</description>
        <long-description/>
        <tag line="8" name="package" description="phemto"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="18" namespace="phemto" package="Default">
        <name>$top</name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="" type="\phemto\Context">
            <type by_reference="false">\phemto\Context</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="19" namespace="phemto" package="Default">
        <name>$named_parameters</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="20" namespace="phemto" package="Default">
        <name>$unnamed_parameters</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="22" package="phemto">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="27" package="phemto">
        <name>willUse</name>
        <full_name>willUse</full_name>
        <argument line="27">
          <name>$preference</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="36" package="phemto">
        <name>forVariable</name>
        <full_name>forVariable</full_name>
        <docblock line="32">
          <description/>
          <long-description/>
          <tag line="32" name="param" description="" type="\phemto\" variable="$name"/>
          <tag line="32" name="return" description="" type="\phemto\Variable">
            <type by_reference="false">\phemto\Variable</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="45" package="phemto">
        <name>whenCreating</name>
        <full_name>whenCreating</full_name>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="param" description="" type="\phemto\" variable="$type"/>
          <tag line="41" name="return" description="" type="\phemto\Context">
            <type by_reference="false">\phemto\Context</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="51" package="phemto">
        <name>forType</name>
        <full_name>forType</full_name>
        <docblock line="50">
          <description/>
          <long-description/>
        </docblock>
        <argument line="51">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="59" package="phemto">
        <name>fill</name>
        <full_name>fill</full_name>
        <docblock line="56">
          <description/>
          <long-description/>
          <tag line="56" name="return" description="" type="\phemto\IncomingParameters">
            <type by_reference="false">\phemto\IncomingParameters</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="66" package="phemto">
        <name>with</name>
        <full_name>with</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="74" package="phemto">
        <name>create</name>
        <full_name>create</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="86" package="phemto">
        <name>pickFactory</name>
        <full_name>pickFactory</full_name>
        <argument line="86">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="86">
          <name>$candidates</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="91" package="phemto">
        <name>settersFor</name>
        <full_name>settersFor</full_name>
        <argument line="91">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="96" package="phemto">
        <name>wrappersFor</name>
        <full_name>wrappersFor</full_name>
        <argument line="96">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="101" package="phemto">
        <name>useParameters</name>
        <full_name>useParameters</full_name>
        <argument line="101">
          <name>$parameters</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="112" package="phemto">
        <name>instantiateParameter</name>
        <full_name>instantiateParameter</full_name>
        <docblock line="106">
          <description/>
          <long-description/>
          <tag line="106" name="param" description="" type="\ReflectionParameter" variable="$parameter">
            <type by_reference="false">\ReflectionParameter</type>
          </tag>
          <tag line="106" name="param" description="" type="\phemto\" variable="$nesting"/>
          <tag line="106" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="106" name="throws" description="" type="\phemto\exception\MissingDependency">
            <type by_reference="false">\phemto\exception\MissingDependency</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="112">
          <name>$nesting</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="126" package="phemto">
        <name>repository</name>
        <full_name>repository</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Phemto.php</error>
      <critical line="15" code="50019">No short description for property $top</critical>
      <error line="19" code="50018">No DocBlock was found for property $named_parameters</error>
      <error line="20" code="50018">No DocBlock was found for property $unnamed_parameters</error>
      <error line="22" code="50010">No DocBlock was found for method __construct()</error>
      <error line="27" code="50010">No DocBlock was found for method willUse()</error>
      <error line="32" code="50012">No short description for method forVariable()</error>
      <error line="41" code="50012">No short description for method whenCreating()</error>
      <error line="50" code="50012">No short description for method forType()</error>
      <error line="50" code="50015">Argument $type is missing from the Docblock of forType()</error>
      <error line="56" code="50012">No short description for method fill()</error>
      <error line="66" code="50010">No DocBlock was found for method with()</error>
      <error line="74" code="50010">No DocBlock was found for method create()</error>
      <error line="86" code="50010">No DocBlock was found for method pickFactory()</error>
      <error line="91" code="50010">No DocBlock was found for method settersFor()</error>
      <error line="96" code="50010">No DocBlock was found for method wrappersFor()</error>
      <error line="101" code="50010">No DocBlock was found for method useParameters()</error>
      <error line="106" code="50012">No short description for method instantiateParameter()</error>
      <error line="126" code="50010">No DocBlock was found for method repository()</error>
    </parse_markers>
  </file>
  <file path="Context.php" hash="30c87e02226b570d2a21469b838bd059" package="Default">
    <class final="false" abstract="false" namespace="phemto" line="10" package="Default">
      <extends/>
      <name>Context</name>
      <full_name>\phemto\Context</full_name>
      <property final="false" static="false" visibility="private" line="15" namespace="phemto" package="Default">
        <name>$parent</name>
        <default/>
        <docblock line="12">
          <description/>
          <long-description/>
          <tag line="12" name="var" description="" type="\phemto\Context|\phemto\Phemto">
            <type by_reference="false">\phemto\Context</type>
            <type by_reference="false">\phemto\Phemto</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="17" namespace="phemto" package="Default">
        <name>$registry</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="phemto" package="Default">
        <name>$variables</name>
        <default>array()</default>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="" type="\phemto\Variable[]">
            <type by_reference="false">\phemto\Variable[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="25" namespace="phemto" package="Default">
        <name>$contexts</name>
        <default>array()</default>
        <docblock line="22">
          <description/>
          <long-description/>
          <tag line="22" name="var" description="" type="\phemto\Context[]">
            <type by_reference="false">\phemto\Context[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="phemto" package="Default">
        <name>$types</name>
        <default>array()</default>
        <docblock line="26">
          <description/>
          <long-description/>
          <tag line="26" name="var" description="" type="\phemto\Type[]">
            <type by_reference="false">\phemto\Type[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="phemto" package="Default">
        <name>$wrappers</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="33" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="33">
          <name>$parent</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="38" package="Default">
        <name>willUse</name>
        <full_name>willUse</full_name>
        <argument line="38">
          <name>$preference</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="50" package="Default">
        <name>forVariable</name>
        <full_name>forVariable</full_name>
        <argument line="50">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="55" package="Default">
        <name>whenCreating</name>
        <full_name>whenCreating</full_name>
        <argument line="55">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="64" package="Default">
        <name>forType</name>
        <full_name>forType</full_name>
        <argument line="64">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="73" package="Default">
        <name>wrapWith</name>
        <full_name>wrapWith</full_name>
        <argument line="73">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="78" package="Default">
        <name>create</name>
        <full_name>create</full_name>
        <argument line="78">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$nesting</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="96" package="Default">
        <name>pickFactory</name>
        <full_name>pickFactory</full_name>
        <argument line="96">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$candidates</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="109" package="Default">
        <name>hasWrapper</name>
        <full_name>hasWrapper</full_name>
        <argument line="109">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="109">
          <name>$already_applied</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto" line="120" package="Default">
        <name>invokeSetters</name>
        <full_name>invokeSetters</full_name>
        <argument line="120">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$nesting</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$instance</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto" line="134" package="Default">
        <name>settersFor</name>
        <full_name>settersFor</full_name>
        <argument line="134">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="148" package="Default">
        <name>wrappersFor</name>
        <full_name>wrappersFor</full_name>
        <argument line="148">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="158" package="Default">
        <name>createDependencies</name>
        <full_name>createDependencies</full_name>
        <argument line="158">
          <name>$parameters</name>
          <default/>
          <type/>
        </argument>
        <argument line="158">
          <name>$nesting</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto" line="180" package="Default">
        <name>instantiateParameter</name>
        <full_name>instantiateParameter</full_name>
        <docblock line="175">
          <description/>
          <long-description/>
          <tag line="175" name="param" description="" type="\ReflectionParameter" variable="$parameter">
            <type by_reference="false">\ReflectionParameter</type>
          </tag>
          <tag line="175" name="param" description="" type="\phemto\" variable="$nesting"/>
          <tag line="175" name="return" description="" type="mixed|\phemto\lifecycle\Value">
            <type by_reference="false">mixed</type>
            <type by_reference="false">\phemto\lifecycle\Value</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$parameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="180">
          <name>$nesting</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto" line="202" package="Default">
        <name>determineContext</name>
        <full_name>determineContext</full_name>
        <argument line="202">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto" line="213" package="Default">
        <name>invoke</name>
        <full_name>invoke</full_name>
        <argument line="213">
          <name>$instance</name>
          <default/>
          <type/>
        </argument>
        <argument line="213">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="213">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto" line="218" package="Default">
        <name>preferFrom</name>
        <full_name>preferFrom</full_name>
        <argument line="218">
          <name>$candidates</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="phemto" line="229" package="Default">
        <name>cons</name>
        <full_name>cons</full_name>
        <argument line="229">
          <name>$head</name>
          <default/>
          <type/>
        </argument>
        <argument line="229">
          <name>$tail</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="239" package="Default">
        <name>repository</name>
        <full_name>repository</full_name>
        <docblock line="236">
          <description/>
          <long-description/>
          <tag line="236" name="return" description="" type="\phemto\repository\ClassRepository">
            <type by_reference="false">\phemto\repository\ClassRepository</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Context.php</error>
      <error line="10" code="50000">No DocBlock was found for \phemto\Context</error>
      <critical line="12" code="50019">No short description for property $parent</critical>
      <error line="17" code="50018">No DocBlock was found for property $registry</error>
      <critical line="18" code="50019">No short description for property $variables</critical>
      <critical line="22" code="50019">No short description for property $contexts</critical>
      <critical line="26" code="50019">No short description for property $types</critical>
      <error line="31" code="50018">No DocBlock was found for property $wrappers</error>
      <error line="33" code="50010">No DocBlock was found for method __construct()</error>
      <error line="38" code="50010">No DocBlock was found for method willUse()</error>
      <error line="50" code="50010">No DocBlock was found for method forVariable()</error>
      <error line="55" code="50010">No DocBlock was found for method whenCreating()</error>
      <error line="64" code="50010">No DocBlock was found for method forType()</error>
      <error line="73" code="50010">No DocBlock was found for method wrapWith()</error>
      <error line="78" code="50010">No DocBlock was found for method create()</error>
      <error line="96" code="50010">No DocBlock was found for method pickFactory()</error>
      <error line="109" code="50010">No DocBlock was found for method hasWrapper()</error>
      <error line="120" code="50010">No DocBlock was found for method invokeSetters()</error>
      <error line="134" code="50010">No DocBlock was found for method settersFor()</error>
      <error line="148" code="50010">No DocBlock was found for method wrappersFor()</error>
      <error line="158" code="50010">No DocBlock was found for method createDependencies()</error>
      <error line="175" code="50012">No short description for method instantiateParameter()</error>
      <error line="202" code="50010">No DocBlock was found for method determineContext()</error>
      <error line="213" code="50010">No DocBlock was found for method invoke()</error>
      <error line="218" code="50010">No DocBlock was found for method preferFrom()</error>
      <error line="229" code="50010">No DocBlock was found for method cons()</error>
      <error line="236" code="50012">No short description for method repository()</error>
    </parse_markers>
  </file>
  <file path="IncomingParameters.php" hash="86a55aaba90b7441bb54cbd2942287c9" package="Default">
    <class final="false" abstract="false" namespace="phemto" line="8" package="phemto">
      <extends/>
      <name>IncomingParameters</name>
      <full_name>\phemto\IncomingParameters</full_name>
      <docblock line="4">
        <description>Allows named paramaters to be specified when calling a method of a class but still have di.</description>
        <long-description/>
        <tag line="4" name="package" description="phemto"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="10" namespace="phemto" package="Default">
        <name>$injector</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="16" package="phemto">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description/>
          <long-description/>
          <tag line="12" name="param" description="" type="array" variable="$names">
            <type by_reference="false">array</type>
          </tag>
          <tag line="12" name="param" description="" type="\phemto\Phemto" variable="$injector">
            <type by_reference="false">\phemto\Phemto</type>
          </tag>
        </docblock>
        <argument line="16">
          <name>$names</name>
          <default/>
          <type/>
        </argument>
        <argument line="16">
          <name>$injector</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="phemto" line="22" package="phemto">
        <name>with</name>
        <full_name>with</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file IncomingParameters.php</error>
      <error line="10" code="50018">No DocBlock was found for property $injector</error>
      <error line="12" code="50012">No short description for method __construct()</error>
      <error line="22" code="50010">No DocBlock was found for method with()</error>
    </parse_markers>
  </file>
  <file path="exception/MissingDependency.php" hash="e6617fdf11b4ad629a36a15c98b9a5f3" package="Default">
    <class final="false" abstract="false" namespace="phemto\exception" line="9" package="phemto\exception">
      <extends>\Exception</extends>
      <name>MissingDependency</name>
      <full_name>\phemto\exception\MissingDependency</full_name>
      <docblock line="4">
        <description>Thrown when a dependency cannot be resolved</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\exception"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file exception/MissingDependency.php</error>
    </parse_markers>
  </file>
  <file path="exception/CannotFindImplementation.php" hash="316523b306434b8e3be7963bc3eeecb9" package="Default">
    <class final="false" abstract="false" namespace="phemto\exception" line="8" package="phemto\exception">
      <extends>\Exception</extends>
      <name>CannotFindImplementation</name>
      <full_name>\phemto\exception\CannotFindImplementation</full_name>
      <docblock line="4">
        <description>Thrown if a an implementation of an interface cannot be found</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\exception"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file exception/CannotFindImplementation.php</error>
    </parse_markers>
  </file>
  <file path="exception/CannotDetermineImplementation.php" hash="b286dfa8d77cc6a0f2c87d52d7f6a60d" package="Default">
    <class final="false" abstract="false" namespace="phemto\exception" line="8" package="phemto\exception">
      <extends>\Exception</extends>
      <name>CannotDetermineImplementation</name>
      <full_name>\phemto\exception\CannotDetermineImplementation</full_name>
      <docblock line="4">
        <description>Thrown when the correct implementation is ambiguous</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\exception"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file exception/CannotDetermineImplementation.php</error>
    </parse_markers>
  </file>
  <file path="exception/SetterDoesNotExist.php" hash="812674edf9d3467f8bc5672eeca128b8" package="Default">
    <class final="false" abstract="false" namespace="phemto\exception" line="9" package="phemto\exception">
      <extends>\Exception</extends>
      <name>SetterDoesNotExist</name>
      <full_name>\phemto\exception\SetterDoesNotExist</full_name>
      <docblock line="4">
        <description>Thrown when a setter is called but not present.</description>
        <long-description></long-description>
        <tag line="4" name="package" description="phemto\exception"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file exception/SetterDoesNotExist.php</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="phemto" full_name="phemto">
    <package name="exception" full_name="phemto\exception"/>
    <package name="lifecycle" full_name="phemto\lifecycle"/>
    <package name="repository" full_name="phemto\repository"/>
  </package>
  <namespace name="phemto" full_name="phemto">
    <namespace name="exception" full_name="phemto\exception"/>
    <namespace name="lifecycle" full_name="phemto\lifecycle"/>
    <namespace name="repository" full_name="phemto\repository"/>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
